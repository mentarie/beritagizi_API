{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { useRef, useState, useEffect } from 'react';\nimport raf from 'raf';\nexport function useFrameState(defaultState) {\n  var stateRef = useRef(defaultState);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var timeoutRef = useRef(null);\n  var updateBatchRef = useRef([]);\n\n  function setFrameState(updater) {\n    if (timeoutRef.current === null) {\n      updateBatchRef.current = [];\n      timeoutRef.current = raf(function () {\n        updateBatchRef.current.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        timeoutRef.current = null;\n        forceUpdate({});\n      });\n    }\n\n    updateBatchRef.current.push(updater);\n  }\n\n  useEffect(function () {\n    raf.cancel(timeoutRef.current);\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\nexport function useTimeoutLock(defaultState) {\n  var frameRef = useRef(defaultState);\n  var timeoutRef = useRef(null);\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = null;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/beritagizi_API/node_modules/rc-table/es/hooks/useFrame.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","useRef","useState","useEffect","raf","useFrameState","defaultState","stateRef","_useState","_useState2","forceUpdate","timeoutRef","updateBatchRef","setFrameState","updater","current","forEach","batchUpdater","cancel","useTimeoutLock","frameRef","cleanUp","window","clearTimeout","setState","newState","setTimeout","getState"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useRef, useState, useEffect } from 'react';\nimport raf from 'raf';\nexport function useFrameState(defaultState) {\n  var stateRef = useRef(defaultState);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var timeoutRef = useRef(null);\n  var updateBatchRef = useRef([]);\n\n  function setFrameState(updater) {\n    if (timeoutRef.current === null) {\n      updateBatchRef.current = [];\n      timeoutRef.current = raf(function () {\n        updateBatchRef.current.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        timeoutRef.current = null;\n        forceUpdate({});\n      });\n    }\n\n    updateBatchRef.current.push(updater);\n  }\n\n  useEffect(function () {\n    raf.cancel(timeoutRef.current);\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\nexport function useTimeoutLock(defaultState) {\n  var frameRef = useRef(defaultState);\n  var timeoutRef = useRef(null);\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = null;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}"]},"metadata":{},"sourceType":"module"}